#parties 2
#define nRound 1  /*NOTE: number rounds */
#define nAnd 32  /*NOTE: number AND gates =128 x nAnd */
#define nExec 1024  /*NOTE: number exec */

typedef uint_t 128 u128_t

typedef struct_t pu128_t
{
    u128_t a[nExec];
}


#input 1 pu128_t
#input 2 pu128_t
#output 1 pu128_t
#output 2 pu128_t

function u128_t test(u128_t inp1, u128_t inp2)
{

	for(u128_t i=0;i<nAnd;i++) /*parallel*/
	{
	   inp1=inp1&inp2;
	}
	return inp1;
}


function void main()
{		
	 for(u128_t e=0;e<nExec;e++) /*parallel*/
	 {
		
		output1.a[e]=test(input1.a[e],input2.a[e]);
	}
}
